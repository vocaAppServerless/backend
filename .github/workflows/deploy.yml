name: Lambda Functions Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'src/handlers/**'
      - 'layer.zip'
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  update-layer:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Get Lambda Layer Name from Parameter Store
      id: get-layer-name
      run: |
        LAYER_NAME=$(aws ssm get-parameter --name "/remember-me/lambda_layer_name" --query 'Parameter.Value' --output text)
        echo "LAYER_NAME=$LAYER_NAME" >> $GITHUB_ENV

    - name: Update Lambda Layer
      run: |
        LAYER_VERSION_ARN=$(aws lambda publish-layer-version \
          --layer-name "$LAYER_NAME" \
          --zip-file fileb://layer.zip \
          --compatible-runtimes nodejs20.x \
          --query 'LayerVersionArn' \
          --output text)
        echo "LAYER_VERSION_ARN=$LAYER_VERSION_ARN" >> $GITHUB_ENV
    
    - name: Update Layer ARN in Parameter Store
      run: |
        aws ssm put-parameter --name "/remember-me/lambda_layer_arn" --type "String" --value "$LAYER_VERSION_ARN" --overwrite

  deploy:
    runs-on: ubuntu-latest
    needs: update-layer
    strategy:
      matrix:
        lambda-function:
          - getUser
          - getLists
          - postList
          - postWords
          - postWord
          - getIncorrectLists
          - postIncorrectList
          - postIncorrectWords
          - postIncorrectWord
          - test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # - name: Run Tests
    #   run: npm test

    - name: Zip Lambda Function
      run: |
        mkdir -p ./templates/lambda
        zip -j ./templates/lambda/lambda_code.zip ./src/handlers/${{ matrix.lambda-function }}.js

    - name: Update Lambda Function Code
      run: |
        aws lambda update-function-code \
          --function-name ${{ matrix.lambda-function }} \
          --zip-file fileb://./templates/lambda/lambda_code.zip

    # 위의 업데이트 작업이 진행 중 람다 layer를 업데이트를 시도할시 충돌이 발생. 이를 해결하기 위해 추가
    - name: Wait for Lambda Function Update
      run: |
        aws lambda wait function-updated \
          --function-name subscription_filter

    # Lambda 함수에 새로운 레이어 버전 적용
    - name: Get Lambda Layer ARN from Parameter Store
      run: |
        LAYER_VERSION_ARN=$(aws ssm get-parameter --name "/remember-me/lambda_layer_arn" --query 'Parameter.Value' --output text)
        echo "LAYER_VERSION_ARN=$LAYER_VERSION_ARN" >> $GITHUB_ENV

    - name: Update Lambda Function Configuration
      run: |
        aws lambda update-function-configuration \
          --function-name ${{ matrix.lambda-function }} \
          --layers "$LAYER_VERSION_ARN"
